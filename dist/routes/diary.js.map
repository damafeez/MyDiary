{"version":3,"sources":["../../server/routes/diary.js"],"names":["router","express","Router","post","req","res","body","title","author","newDiary","Diary","save","diary","json","Error","status","send","message","get","find","entries","id","params","findById","entry","put","findByIdAndUpdate","delete","findByIdAndDelete"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEAF,OAAOG,IAAP,CAAY,UAAZ;AAAA,qEAAwB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEYD,IAAIE,IAFhB,EAEZC,KAFY,aAEZA,KAFY,EAELD,IAFK,aAELA,IAFK,EAECE,MAFD,aAECA,MAFD;;AAAA,kBAGhBD,SAASD,IAAT,IAAiBE,MAHD;AAAA;AAAA;AAAA;;AAIZC,oBAJY,GAID,IAAIC,eAAJ,CAAU,EAAEH,YAAF,EAASD,UAAT,EAAeE,cAAf,EAAV,CAJC;AAAA;AAAA,mBAKEE,gBAAMC,IAAN,CAAWF,QAAX,CALF;;AAAA;AAKZG,iBALY;;AAMlBP,gBAAIQ,IAAJ,CAASD,KAAT;AANkB;AAAA;;AAAA;AAAA,kBAQZ,IAAIE,KAAJ,CAAU,6BAAV,CARY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWpBT,gBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,YAAMC,OAA3B;;AAXoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;AAcAjB,OAAOkB,GAAP,CAAW,UAAX;AAAA,sEAAuB,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEGK,gBAAMS,IAAN,EAFH;;AAAA;AAEbC,mBAFa;;AAGnBf,gBAAIW,IAAJ,CAASI,OAAT;AAHmB;AAAA;;AAAA;AAAA;AAAA;;AAKnBf,gBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAAMC,OAA3B;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAQAjB,OAAOkB,GAAP,CAAW,cAAX;AAAA,sEAA2B,kBAAOd,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfgB,cAFe,GAERjB,IAAIkB,MAFI,CAEfD,EAFe;AAAA;AAAA,mBAGHX,gBAAMa,QAAN,CAAeF,EAAf,CAHG;;AAAA;AAGjBG,iBAHiB;;AAIvBnB,gBAAIW,IAAJ,CAASQ,KAAT;AAJuB;AAAA;;AAAA;AAAA;AAAA;;AAMvBnB,gBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAAMC,OAA3B;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AASAjB,OAAOyB,GAAP,CAAW,cAAX;AAAA,sEAA2B,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAECD,IAAIE,IAFL,EAEfC,KAFe,cAEfA,KAFe,EAERD,IAFQ,cAERA,IAFQ;;AAAA,kBAGnBC,SAASD,IAHU;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIDI,gBAAMgB,iBAAN,CAAwBtB,IAAIkB,MAAJ,CAAWD,EAAnC,EAAuC,EAAEd,YAAF,EAASD,UAAT,EAAvC,CAJC;;AAAA;AAIfM,iBAJe;;AAKrBP,gBAAIW,IAAJ,CAASJ,KAAT;AALqB;AAAA;;AAAA;AAAA,kBAOf,IAAIE,KAAJ,CAAU,6BAAV,CAPe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAUvBT,gBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAAMC,OAA3B;;AAVuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAaAjB,OAAO2B,MAAP,CAAc,cAAd;AAAA,sEAA8B,kBAAOvB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBgB,cAFkB,GAEXjB,IAAIkB,MAFO,CAElBD,EAFkB;AAAA;AAAA,mBAGNX,gBAAMkB,iBAAN,CAAwBP,EAAxB,CAHM;;AAAA;AAGpBT,iBAHoB;;AAI1BP,gBAAIW,IAAJ,CAASJ,KAAT;AAJ0B;AAAA;;AAAA;AAAA;AAAA;;AAM1BP,gBAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAAEC,OAAvB;;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;kBAUejB,M","file":"diary.js","sourcesContent":["import express from 'express';\nimport Diary from '../model/Diary';\n\nconst router = express.Router();\n\nrouter.post('/entries', async (req, res) => {\n  try {\n    const { title, body, author } = req.body;\n    if (title && body && author) {\n      const newDiary = new Diary({ title, body, author });\n      const diary = await Diary.save(newDiary);\n      res.json(diary);\n    } else {\n      throw new Error('all fields must be provided');\n    }\n  } catch (error) {\n    res.status(400).send(error.message);\n  }\n});\nrouter.get('/entries', async (req, res) => {\n  try {\n    const entries = await Diary.find();\n    res.send(entries);\n  } catch (error) {\n    res.status(404).send(error.message);\n  }\n});\nrouter.get('/entries/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const entry = await Diary.findById(id);\n    res.send(entry);\n  } catch (error) {\n    res.status(404).send(error.message);\n  }\n});\nrouter.put('/entries/:id', async (req, res) => {\n  try {\n    const { title, body } = req.body;\n    if (title && body) {\n      const diary = await Diary.findByIdAndUpdate(req.params.id, { title, body });\n      res.send(diary);\n    } else {\n      throw new Error('all fields must be provided');\n    }\n  } catch (error) {\n    res.status(400).send(error.message);\n  }\n});\nrouter.delete('/entries/:id', async (req, res) => {\n  try {\n    const { id } = req.params;\n    const diary = await Diary.findByIdAndDelete(id);\n    res.send(diary);\n  } catch (e) {\n    res.status(400).send(e.message);\n  }\n});\n\nexport default router;\n"]}